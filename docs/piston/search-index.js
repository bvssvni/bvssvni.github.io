var searchIndex = {};
searchIndex['piston'] = {"items":[[0,"","piston","A user friendly graphics engine."],[1,"GameWindowSDL2","","A widow implemented by SDL2 back-end."],[11,"window","","",0],[11,"context","","",0],[11,"settings","","",0],[11,"should_close","","",0],[1,"GameWindowGLFW","","Contains stuff for game window."],[11,"window","","The window.",1],[11,"events","","Receives events from window.",1],[11,"glfw","","GLFW context.",1],[11,"settings","","Game window settings;",1],[11,"should_close","","",1],[11,"event_queue","","",1],[1,"GameWindowSettings","","Settings for window behavior."],[11,"title","","Title of the window.",2],[11,"size","","The size of the window",2],[11,"fullscreen","","If true, the window is fullscreen.",2],[11,"exit_on_esc","","If true, exit when pressing Esc.",2],[11,"background_color","","The background color.",2],[1,"Gl","","OpenGL back-end for Rust-Graphics."],[11,"gl_data","","",3],[11,"asset_store","","",3],[1,"GlData","","Contains OpenGL data."],[11,"tri_list_xy_rgba","","",4],[11,"tri_list_xy_rgba_uv","","",4],[11,"position_id","","",4],[11,"fill_color_id","","",4],[11,"tex_coord_id","","",4],[11,"current_program","","",4],[1,"AssetStore","","A place to store sounds, textures, animations etc."],[11,"assets_folder","","",5],[11,"textures","","",5],[11,"texture_files","","",5],[0,"shader_utils","","Helper functions for dealing with shaders."],[3,"compile_shader","piston::shader_utils","Compiles a vertex shader from file and fails if not succeeding.\nReads a shader file and creates data required to compile.\nCompiles a shader.\nReturns a shader or a message with the error."],[0,"game_window","piston","A trait for window operations."],[6,"GameWindow","piston::game_window","Implemented by window back-end."],[9,"new","","Creates a window.",6],[9,"get_settings","","Get the window's settings.",6],[10,"should_close","","Returns ture if the window should close.",6],[10,"get_size","","Get the window's size",6],[10,"swap_buffers","","If window support double buffers, called this to tell implementation\nswap buffers.",6],[10,"poll_event","","Poll a event from window's event queue.",6],[0,"keyboard","piston","Back-end agnostic keyboard keys."],[2,"Key","piston::keyboard","Represent a keyboard key."],[12,"Unknown","","Key that not supported currently.",7],[12,"Left","","Left arrow key.",7],[12,"Right","","Right arrow key.",7],[12,"Up","","Up arrow key.",7],[12,"Down","","Down arrow key.",7],[12,"Enter","","Return",7],[12,"Space","","Space bar",7],[10,"eq","","",7],[10,"ne","","",7],[0,"event","piston","Event data."],[2,"Event","piston::event","Contains the information associated with an event."],[12,"NoEvent","","No event occured.",8],[12,"KeyReleased","","A key was released.",8],[12,"KeyPressed","","A key was pressed.",8],[12,"MouseButtonPressed","","A mouse button was pressed.",8],[12,"MouseButtonReleased","","A mouse button was released.",8],[12,"MouseMoved","","The mouse moved.",8],[0,"mouse","piston","Back-end agnostic mouse buttons."],[2,"Button","piston::mouse","Represent a mouse button."],[12,"Unknown","","Unknown mouse button.",9],[12,"Left","","Left mouse button.",9],[12,"Right","","Right mouse button.",9],[12,"Middle","","Middle mouse button.",9],[12,"X1","","Extra mouse button number 1.",9],[12,"X2","","Extra mouse button number 2.",9],[12,"Button6","","Mouse button number 6.",9],[12,"Button7","","Mouse button number 7.",9],[12,"Button8","","Mouse button number 8.",9],[10,"eq","","",9],[10,"ne","","",9],[6,"Game","piston","Implemented by game applications."],[10,"render","","Render graphics.",10],[10,"update","","Update the physical state of the game.",10],[10,"load","","Perform tasks for loading before showing anything.",10],[10,"key_press","","User pressed a key.",10],[10,"key_release","","User released a key.",10],[10,"mouse_press","","Pressed a mouse button.",10],[10,"mouse_release","","Released a mouse button.",10],[10,"mouse_move","","Moved mouse cursor.",10],[10,"mouse_relative_move","","Moved mouse relative, not bounded by cursor.",10],[10,"viewport","","Sets up viewport.",10],[10,"should_close","","Whether the window should be closed.",10],[10,"swap_buffers","","Swaps the front buffer with the back buffer.",10],[10,"handle_events","","Handles events using current game window settings.",10],[10,"run","","Executes a game loop.",10]],"paths":[[1,"GameWindowSDL2"],[1,"GameWindowGLFW"],[1,"GameWindowSettings"],[1,"Gl"],[1,"GlData"],[1,"AssetStore"],[6,"GameWindow"],[2,"Key"],[2,"Event"],[2,"Button"],[6,"Game"]]};
initSearch(searchIndex);
