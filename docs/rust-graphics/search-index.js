var searchIndex = {};
searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends."],[1,"Context","","Drawing 2d context."],[11,"base","","Base/original transformation.",0],[11,"transform","","Current transformation.",0],[1,"ColorContext","","A context with color information."],[11,"base","","Base/original transformation.",1],[11,"transform","","Current transformation.",1],[11,"color","","Current color.",1],[1,"EllipseContext","","An ellipse context."],[11,"base","","Base/origin transform.",2],[11,"transform","","Current transformation.",2],[11,"rect","","Current rectangle enclosing the ellipse.",2],[1,"EllipseColorContext","","An ellipse color context."],[11,"base","","Base/original transformation.",3],[11,"transform","","Current transformation.",3],[11,"rect","","Current rectangle.",3],[11,"color","","Current color.",3],[1,"ImageRectangleContext","","An image rectangle context."],[11,"base","","Base/original transformation.",4],[11,"transform","","Current transformation.",4],[11,"rect","","Current rectangle.",4],[11,"image","","Current image.",4],[1,"ImageRectangleColorContext","","An image rectangle context."],[11,"base","","Base/original transformation.",5],[11,"transform","","Current transformation.",5],[11,"rect","","Current rectangle.",5],[11,"image","","Current image.",5],[11,"color","","Current color.",5],[1,"LineContext","","A line context."],[11,"base","","Base/original transform.",6],[11,"transform","","Current transform.",6],[11,"line","","Current line.",6],[1,"PolygonContext","","A polygon context."],[11,"base","","Base/origin transform.",7],[11,"transform","","Current transform.",7],[11,"polygon","","Current polygon.",7],[1,"PolygonColorContext","","A polygon color context."],[11,"base","","Base/origin transform.",8],[11,"transform","","Current transform.",8],[11,"color","","Current color.",8],[11,"polygon","","Current polygon.",8],[1,"RectangleContext","","A rectangle context."],[11,"base","","Base/original transformation.",9],[11,"transform","","Current transformation.",9],[11,"rect","","Current rectangle.",9],[1,"RectangleColorContext","","A rectangle color context."],[11,"base","","Base/original transformation.",10],[11,"transform","","Current transformation.",10],[11,"rect","","Current rectangle.",10],[11,"color","","Current color.",10],[1,"RoundRectangleContext","","A round rectangle context."],[11,"base","","Base/origin transform.",11],[11,"transform","","Current transform.",11],[11,"rect","","Current rectangle.",11],[11,"round_radius","","Current roundnes radius.",11],[1,"RoundRectangleColorContext","","A rectangle color context."],[11,"base","","Base/original transformation.",12],[11,"transform","","Current transformation.",12],[11,"rect","","Current rectangle.",12],[11,"round_radius","","Current roundness radius.",12],[11,"color","","Current color.",12],[1,"TweenContext","","An animation inbetweening context."],[11,"base","","Base/origin transform.",13],[11,"transform","","Current transform.",13],[11,"tween_factor","","Animation inbetweening factor.",13],[1,"TweenColorContext","","An animation inbetweening context with color."],[11,"base","","Base/origin transform.",14],[11,"transform","","Current transform.",14],[11,"color","","Current color.",14],[11,"tween_factor","","Animation inbetweening factor.",14],[1,"TweenPolygonsContext","","An animation inbetweening context with color."],[11,"base","","Base/origin transform.",15],[11,"transform","","Current transform.",15],[11,"tween_factor","","Animation inbetweening factor.",15],[11,"polygons","","The animated polygons.",15],[1,"TweenPolygonsColorContext","","An animation inbetweening context with color."],[11,"base","","Base/origin transform.",16],[11,"transform","","Current transform.",16],[11,"color","","Current color.",16],[11,"tween_factor","","Animation inbetweening factor.",16],[11,"polygons","","The animated polygons.",16],[1,"Image","","Represents an image."],[11,"texture_id","","A unique identifier of the texture, recognizable by back-end.",17],[11,"texture_width","","The pixel width of the texture.",17],[11,"texture_height","","The pixel height of the texture.",17],[11,"source_rect","","The source rectangle in the texture.",17],[2,"Field","","A structure that might contain a value or a borrowed value.\nThis is to used as building block to create data structure\nthat is partially based on an existing structure."],[12,"Value","","Contains a value.",18],[12,"Borrowed","","Contains a borrowed pointer.",18],[0,"vecmath","","Various methods for computing with vectors."],[3,"multiply","graphics::vecmath","Multiplies two matrices."],[3,"translate","","Creates a translation matrix."],[3,"rotate_radians","","Creates a rotation matrix."],[3,"orient","","Orients x axis to look at point."],[3,"scale","","Create a scale matrix."],[3,"shear","","Create a shear matrix."],[3,"identity","","Create an identity matrix."],[3,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector."],[3,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used to solve collision of rectangles."],[3,"margin_rectangle","","Shrinks a rectangle by a factor on all sides."],[3,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile."],[3,"modular_offset","","Computes modular offset safely for numbers."],[3,"area_centroid","","Computes the area and centroid of a simple polygon."],[3,"area","","Computes area of a simple polygon."],[3,"centroid","","Computes centroid of a simple polygon."],[3,"line_side","","Returns a number that tells which side it is relative to a line."],[3,"inside_triangle","","Returns true if point is inside triangle."],[0,"triangulation","graphics","Methods for converting shapes into triangles."],[3,"with_lerp_polygons_tri_list_xy_f32_rgba_f32","graphics::triangulation","Streams tweened polygons using linear interpolation."],[3,"with_ellipse_tri_list_xy_f32_rgba_f32","","Streams an ellipse specified by a resolution."],[3,"with_round_rectangle_tri_list_xy_f32_rgba_f32","","Streams a round rectangle."],[3,"stream_polygon_tri_list_xy_f32_rgba_f32","","Streams a polygon into tri list with color per vertex.\nUses buffers that fit inside L1 cache."],[3,"with_polygon_tri_list_xy_f32_rgba_f32","","Splits polygon into convex segments with one color per vertex.\nCreate a buffer that fits into L1 cache with 1KB overhead."],[3,"rect_tri_list_xy_f32","","Creates triangle list vertices from rectangle."],[3,"rect_tri_list_rgba_f32","","Creates triangle list colors from rectangle."],[3,"rect_tri_list_uv_f32","","Creates triangle list texture coords from image."],[0,"interpolation","graphics","Interpolation algorithms."],[3,"lerp","graphics::interpolation","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that gives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight."],[3,"lerp_2","","Performs linear interpolation on array of size 3."],[3,"lerp_3","","Performs linear interpolation on array of size 3."],[3,"lerp_4","","Performs linear interpolation on array of size 4."],[3,"lerp_5","","Performs linear interpolation on array of size 5."],[3,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:"],[3,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:"],[0,"modular_index","graphics","Helper functions for computing modular index safely."],[3,"offset","graphics::modular_index","Computes modular offset safely for indices."],[3,"previous","","Computes previous modular index safely."],[3,"next","","Computes next modular index safely."],[4,"Color","graphics","[red, green, blue, alpha]"],[4,"Line","","[x1, y1, x2, y2]"],[4,"Ray","","[x, y, dir_x, dir_y]"],[4,"Matrix2d","","[m00, m01, m02, m10, m11, m12]"],[4,"PixelRectangle","","[x, y, w, h]"],[4,"Rectangle","","[x, y, w, h]"],[4,"Triangle","","[x1, y1, x2, y2, x3, y3]"],[4,"Vec2d","","[x, y]"],[6,"BackEnd","","Implemented by all graphics back-ends.\nThis trait uses default methods to simplify implementation."],[10,"supports_clear_rgba","","Returns true if feature is supported.",19],[10,"clear_rgba","","Clears background with a color.",19],[10,"enable_alpha_blend","","Turns on alpha blending.",19],[10,"disable_alpha_blend","","Turns off alpha blending.",19],[10,"supports_single_texture","","Returns true if texture feature is supported.",19],[10,"enable_single_texture","","Sets the current single-texture.",19],[10,"disable_single_texture","","Disables single-texture.",19],[10,"has_texture_alpha","","Should return true if texture has alpha channel.",19],[10,"supports_tri_list_xy_f64_rgba_f32","","Returns true if feature is supported.",19],[10,"tri_list_xy_f64_rgba_f32","","Renders list of 2d triangles with color assigned per vertex.",19],[10,"supports_tri_list_xy_f32_rgba_f32","","Returns true if feature is supported.",19],[10,"tri_list_xy_f32_rgba_f32","","Renders list of 2d triangles with color assigned per vertex.",19],[10,"supports_tri_list_xy_f32_rgba_f32_uv_f32","","Returns true if feature is supported.",19],[10,"tri_list_xy_f32_rgba_f32_uv_f32","","Renders list of 2d triangles.",19],[6,"RelativeTransform2d","","Implemented by contexts that can transform."],[9,"trans","","Translate x and y.",20],[9,"trans_local","","Translate x an y in local coordinates.",20],[10,"rot_deg","","Rotates degrees.",20],[10,"rot_deg_local","","Rotates degrees in local coordinates.",20],[9,"rot_rad","","Rotate radians.",20],[9,"rot_rad_local","","Rotate radians in local coordinates.",20],[9,"orient","","Orients x axis to look at point.",20],[9,"orient_local","","Orients x axis to look at point locally.",20],[9,"scale","","Scale.",20],[9,"scale_local","","Scales in local coordinates.",20],[10,"zoom","","Scales in both directions.",20],[10,"zoom_local","","Scales in both directions in local coordinates.",20],[10,"flip_v","","Flips vertically.",20],[10,"flip_v_local","","Flips vertically in local coordinates.",20],[10,"flip_h","","Flips horizontally.",20],[10,"flip_h_local","","Flips horizontally in local coordinates.",20],[9,"shear","","Shear.",20],[9,"shear_local","","Shears in local coordinates.",20],[6,"AddColor","","Implemented by contexts who can add color."],[9,"rgba","","Add color with alpha channel.",21],[10,"rgb","","Adds color with alpha channel set to 1.0.",21],[10,"color","","Add color [r, g, b, a].",21],[10,"grey","","Adds a gray color.",21],[10,"alpha","","Adds a white semi-transparent color.",21],[6,"AddEllipse","","Implemented by all contexts that can add ellipse."],[9,"ellipse","","Adds an ellipse.",22],[10,"ellipse_centered","","Adds an ellipse with coordinates in the center.",22],[10,"circle","","Adds a square with coordinates of upper left corner.",22],[10,"circle_centered","","Adds a square with coordinates in the center.",22],[6,"AddImage","","Implemented by contexts that can add image."],[9,"image","","Add image to context.",23],[6,"AddPolygon","","Implemented by contexts who can add polygon."],[9,"polygon","","Add polygon.",24],[6,"AddPolygons","","Implemented by tweening contexts that can add polygons."],[9,"polygons","","Add polygons.",25],[6,"AddRectangle","","Implemented by all contexts that can add rectangle."],[9,"rect","","Adds a rectangle.",26],[10,"rect_centered","","Adds a rectangle with coordinates in the center.",26],[10,"square","","Adds a square with coordinates of upper left corner.",26],[10,"square_centered","","Adds a square with coordinates in the center.",26],[6,"AddRound","","Implemented by contexts that can make a shape rounder."],[9,"round","","Rounds the shape of the current context.",27],[6,"AddTween","","Implemented by contexts who can give an animated inbetweening context."],[9,"lerp","","Do linear interpolation.",28],[6,"RelativeColor","","Implemented by contexts that contains color."],[9,"mul_rgba","","Multiplies with red, green, blue and alpha values.",29],[10,"tint","","Mixes the current color with white.",29],[10,"shade","","Mixes the current color with black.",29],[6,"RelativeRectangle","","Should be implemented by contexts that have rectangle information."],[9,"margin","","Shrinks the current rectangle equally by all sides.",30],[10,"expand","","Expands the current rectangle equally by all sides.",30],[9,"rel","","Moves to a relative rectangle using the current rectangle as tile.",30],[10,"up","","Moves to the rectangle above using the current rectangle as tile.",30],[10,"left","","Moves to the left rectangle using the current rectangle as tile.",30],[10,"right","","Moves to the right rectangle using the current rectangle as tile.",30],[10,"down","","Moves to the rectangle below using the current rectangle as tile.",30],[6,"Draw","","Implemented by contexts that can draws something using a back-end."],[9,"draw","","Draw using back-end.",31],[6,"Fill","","Fills a shape using a back-end."],[9,"fill","","Fill shape using back-end.",32],[6,"Clear","","Implemented by contexts that can clear the background."],[9,"clear","","Clears the background.",33],[6,"View","","Should be implemented by contexts that draws something relative to view."],[9,"view","","Moves the current transform to the view coordinate system.",34],[9,"reset","","Moves the current transform to the default coordinate system.",34],[9,"store_view","","Stores the current transform as new view.",34],[10,"get","","Gets a read only value.",18]],"paths":[[1,"Context"],[1,"ColorContext"],[1,"EllipseContext"],[1,"EllipseColorContext"],[1,"ImageRectangleContext"],[1,"ImageRectangleColorContext"],[1,"LineContext"],[1,"PolygonContext"],[1,"PolygonColorContext"],[1,"RectangleContext"],[1,"RectangleColorContext"],[1,"RoundRectangleContext"],[1,"RoundRectangleColorContext"],[1,"TweenContext"],[1,"TweenColorContext"],[1,"TweenPolygonsContext"],[1,"TweenPolygonsColorContext"],[1,"Image"],[2,"Field"],[6,"BackEnd"],[6,"RelativeTransform2d"],[6,"AddColor"],[6,"AddEllipse"],[6,"AddImage"],[6,"AddPolygon"],[6,"AddPolygons"],[6,"AddRectangle"],[6,"AddRound"],[6,"AddTween"],[6,"RelativeColor"],[6,"RelativeRectangle"],[6,"Draw"],[6,"Fill"],[6,"Clear"],[6,"View"]]};
initSearch(searchIndex);
